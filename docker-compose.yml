services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE =postgres
      - SPRING_DATASOURCE_URL =jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME =postgres
      - SPRING_DATASOURCE_PASSWORD =postgres
      - SPRING_DATA_REDIS_HOST =redis-cache
      - SPRING_DATA_REDIS_PORT =6379
      - SPRING_CACHE_REDIS_TIME-TO-LIVE =60000
      - SPRING_KAFKA_BOOTSTRAP_SERVERS =kafka:9092
    depends_on:
      - postgres
      - redis-cache
      - kafka

  postgres:
    image: postgres:17
    container_name: postgres
    ports:
      - "5432:5432" #<-base postgres port
    environment:
      - POSTGRES_USER =postgres
      - POSTGRES_PASSWORD =postgres
      - POSTGRES_DB =postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis-cache:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379" #<-base redis port
    volumes:
      - redis-data:/data

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"  # base Kafka port
    environment:
      - KAFKA_CFG_PROCESS_ROLES=controller,broker #one node for control and broking
      - KAFKA_CFG_NODE_ID=1 #first and only node in kafka cluster
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092  # Internal DNS
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka-data:/bitnami/kafka
    depends_on:
      - postgres
volumes:
  postgres-data:
  redis-data:
  kafka-data: